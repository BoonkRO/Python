
# Parte 1
def passCaptchaPart1(captcha):
    """
    Recibe un parámetro que nos proporciona una en forma de string de números que recorreremos y debemos
    saber la suma de todos los valores que coinciden con el valor que le sigue en la lista (return).
        - Es una lista circular.
        - Si el valor de la posición coincide con el valor de la posición siguiente se sumará dicho valor
        al resultado final.
        - Al ser circular, si el primer digito coincide con el último también cuenta.
    :param captcha: recibe un string de 'x' números
    :return: devuelve un número (int)
    """
    index = 0       # Variable que indica la posición en la que nos encontramos.
    result = 0      # Variable que acumula en valor final.
    for number in captcha:      # Bucle for para recorrer la lista de principio a fin.
        if index == len(captcha)-1:     # Si coinciden el contador de posición con la última posición de la lista, entra para hacer la última comparación.
            if captcha[0] == captcha[-1]:       # Compara valores para sumar a result en caso de coincidencia, devuelve el resultado y sale de la función.
                result = result + int(captcha[0])
                return result
            else:
                return result
        elif number == captcha[index+1]:        # Condición que sumará el valor a result en caso de coincidencia de valores con la siguiente posición y suma 1 a la variable de posición para pasar a la siguiente en la próxima vuelta.
            result = result + int(captcha[index])
            index += 1
        else:
            index += 1


# Parte 2
def passCaptchaPart2(captcha2):
    """
    Recibe un parámetro que nos proporciona una en forma de string de números que recorreremos y debemos
    saber la suma de todos los valores que coinciden con su posición, teniendo en cuenta que partimos la
    lista por la mitad, por lo tanto tendremos dos listas de la misma longitud y debemos
        - Partimos la lista por la mitad (si son 10 digitos, 10/2=5).
        - Si el valor de la posición coincide con el valor de la misma posición en la segunda lista se
        sumarán y ese valor se suma al resultado final.
        - Al ser circular, si el primer dígito de la primera lista coincide con el último dígito de la
         segunda lista también cuenta.
    :param captcha2: recibe un string de 'x' números.
    :return: devuelve un número (int).
    """

    mitad = round(len(captcha2)/2)      # Variable con el valor de longitud de media lista.
    primeraMitad = captcha2[:mitad]     # Contiene la primera parte de la lista, de principio a mitad.
    segundaMitad = captcha2[mitad:]     # Contiene la segunda parte de la lista, de mitad al final.
    index = 0       # Variable que indica la posición en la que nos encontramos.
    resultado = 0       # Variable que acumula en valor final.

    while mitad >= index:       # Bucle que se repite el numero de veces como posiciones tiene media lista.
        if mitad == index:      # Si coincide la posición con el valor de longitud de media lista devuelve el resultado final.
            return resultado
        elif primeraMitad[index] == segundaMitad[index]:        # Si coinciden los valores se le suma la suma de ambos al resultado final y sumamos uno a la variable que marca la posición.
            resultado = resultado + int(primeraMitad[index]) + int(primeraMitad[index])
            index += 1
        else:
            index += 1


# Casos test de las dos funciones
if __name__ == '__main__':

#----passCaptchaPart1----
    def casosTestPart1():
        test1 = '1122'
        assert passCaptchaPart1(test1) == 3, 'Error en test1'
        test2 = '142554231'
        assert passCaptchaPart1(test2) == 6, 'Error en test2'
        test3 = '32144778856666'
        assert passCaptchaPart1(test3) == 37, 'Error en test3'
        test4 = '001122334455'
        assert passCaptchaPart1(test4) == 15, 'Error en test4'
        test5 = '1234567891'
        assert passCaptchaPart1(test5) == 1, 'Error en test5'

        print('¡Casos test parte 1 correctos!')
        captcha = '181445682966897848665963472661939865313976877194312684993521259486517527961396717561854825453963181134379574918373213732184697746668399631642622373684425326112585283946462323363991753895647177797691214784149215198715986947573668987188746878678399624533792551651335979847131975965677957755571358934665327487287312467771187981424785514785421781781976477326712674311994735947987383516699897916595433228294198759715959469578766739518475118771755787196238772345762941477359483456641194685333528329581113788599843621326313592354167846466415943566183192946217689936174884493199368681514958669615226362538622898367728662941275658917124167353496334664239539753835439929664552886538885727235662548783529353611441231681613535447417941911479391558481443933134283852879511395429489152435996669232681215627723723565872291296878528334773391626672491878762288953597499218397146685679387438634857358552943964839321464529237533868734473777756775687759355878519113426969197211824325893376812556798483325994128743242544899625215765851923959798197562831313891371735973761384464685316273343541852758525318144681364492173465174512856618292785483181956548813344752352933634979165667651165776587656468598791994573513652324764687515345959621493346623821965554755615219855842969932269414839446887613738174567989512857785566352285988991946436148652839391593178736624957214917527759574235133666461988355855613377789115472297915429318142824465141688559333787512328799783539285826471818279818457674417354335454395644435889386297695625378256613558911695145397779576526397241795181294322797687168326696497256684943829666672341162656479563522892141714998477865114944671225898297338685958644728534192317628618817551492975251364233974374724968483637518876583946828819994321129556511537619253381981544394112184655586964655164192552352534626295996968762388827294873362719636616182786976922445125551927969267591395292198155775434997827738862786341543524544822321112131815475829945625787561369956264826651461575948462782869972654343749617939132353399334744265286151177931594514857563664329299713436914721119746932159456287267887878779218815883191236858656959258484139254446341'
        print('Test Final Parte 1:', passCaptchaPart1(captcha))

#----passCaptcha2Part2----
    def casosTestPart2():
        test1 = '1122'
        assert passCaptchaPart2(test1) == 0, 'Error en test1'
        test2 = '14255421'
        assert passCaptchaPart2(test2) == 12, 'Error en test1'
        test3 = '123456123456'
        assert passCaptchaPart2(test3) == 42, 'Error en test1'
        test4 = '214585321574'
        assert passCaptchaPart2(test4) == 10, 'Error en test1'
        test5 = '15423691542329'
        assert passCaptchaPart2(test5) == 48, 'Error en test1'

        print('¡Casos test parte 2 correctos!')
        captcha2 = '181445682966897848665963472661939865313976877194312684993521259486517527961396717561854825453963181134379574918373213732184697746668399631642622373684425326112585283946462323363991753895647177797691214784149215198715986947573668987188746878678399624533792551651335979847131975965677957755571358934665327487287312467771187981424785514785421781781976477326712674311994735947987383516699897916595433228294198759715959469578766739518475118771755787196238772345762941477359483456641194685333528329581113788599843621326313592354167846466415943566183192946217689936174884493199368681514958669615226362538622898367728662941275658917124167353496334664239539753835439929664552886538885727235662548783529353611441231681613535447417941911479391558481443933134283852879511395429489152435996669232681215627723723565872291296878528334773391626672491878762288953597499218397146685679387438634857358552943964839321464529237533868734473777756775687759355878519113426969197211824325893376812556798483325994128743242544899625215765851923959798197562831313891371735973761384464685316273343541852758525318144681364492173465174512856618292785483181956548813344752352933634979165667651165776587656468598791994573513652324764687515345959621493346623821965554755615219855842969932269414839446887613738174567989512857785566352285988991946436148652839391593178736624957214917527759574235133666461988355855613377789115472297915429318142824465141688559333787512328799783539285826471818279818457674417354335454395644435889386297695625378256613558911695145397779576526397241795181294322797687168326696497256684943829666672341162656479563522892141714998477865114944671225898297338685958644728534192317628618817551492975251364233974374724968483637518876583946828819994321129556511537619253381981544394112184655586964655164192552352534626295996968762388827294873362719636616182786976922445125551927969267591395292198155775434997827738862786341543524544822321112131815475829945625787561369956264826651461575948462782869972654343749617939132353399334744265286151177931594514857563664329299713436914721119746932159456287267887878779218815883191236858656959258484139254446341'
        print('Test Final Parte 2:', passCaptchaPart2(captcha2))

#----Ejecución casos test----
    casosTestPart1()
    casosTestPart2()
